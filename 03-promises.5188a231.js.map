{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UA+B/B,SAASI,EAAcC,EAAUP,GAY/B,OAXgB,IAAIQ,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUP,UAEpBU,EAAO,CAAEH,WAAUP,S,GAEpBA,E,IArCPD,EAAKM,KAAKU,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAMC,iBAQN,IANA,IAAMC,EAAaC,OAAOpB,EAAKC,MAAMoB,OAC/BjB,EAAOgB,OAAOpB,EAAKI,KAAKiB,OACxBhB,EAASe,OAAOpB,EAAKK,OAAOgB,OAE9BC,EAAQH,EAEHI,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChChB,EAAcgB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUP,EAAKwB,EAALxB,MACjByB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUP,EAAKwB,EAALxB,MAClByB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAAN5B,EAAM,M,IAIjDqB,GAASlB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n\n  const delayValue = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  let delay = delayValue;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5188a231.js.map"}